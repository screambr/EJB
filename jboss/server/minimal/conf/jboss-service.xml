<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: jboss-service.xml 91313 2009-07-15 20:10:37Z bstansberry@jboss.com $ -->

<!-- ===================================================================== -->
<!--  A minimal JBoss Server Configuration                                 -->
<!-- ===================================================================== -->

<server>

   <!-- Load all jars from the JBOSS_DIST/server/<config>/lib directory. This
        can be restricted to specific jars by specifying them in the archives
        attribute.
    -->
   <classpath codebase="${jboss.server.lib.url}" archives="*"/>

   <!-- ==================================================================== -->
   <!-- JNDI                                                                 -->
   <!-- ==================================================================== -->

   <!-- A simple mbean wrapper around the jndi Naming object. This
      only handles an in memory instance. The NamingService uses this
      as the JNDI store and exposes it remotely.
   -->
   <mbean code="org.jnp.server.NamingBeanImpl"
      name="jboss:service=NamingBeanImpl"
      xmbean-dd="resource:xmdesc/NamingBean-xmbean.xml">
   </mbean>
   
   <mbean code="org.jboss.naming.NamingService"
      name="jboss:service=Naming"
      xmbean-dd="resource:xmdesc/NamingService-xmbean.xml">
      <!-- The call by value mode. true if all lookups are unmarshalled using
         the caller's TCL, false if in VM lookups return the value by reference.
      -->
      <attribute name="CallByValue">false</attribute>
      <!-- The listening port for the bootstrap JNP service. Set this to -1
         to run the NamingService without the JNP invoker listening port.
      -->
      <attribute name="Port">1099</attribute>
      <!-- The bootstrap JNP server bind address. This also sets the default
         RMI service bind address. Empty == all addresses
      -->
      <attribute name="BindAddress">${jboss.bind.address}</attribute>
      <!-- The port of the RMI naming service, 0 == anonymous -->
      <attribute name="RmiPort">1098</attribute>
      <!-- The RMI service bind address. Empty == all addresses
      -->
      <attribute name="RmiBindAddress">${jboss.bind.address}</attribute>
      <!-- The thread pool service used to control the bootstrap lookups -->
      <attribute name="LookupPool">
         <inject bean="LongRunningTasksThreadPool"/>
      </attribute>
      <!-- An example of using the unifed invoker as the transport.
         <depends optional-attribute-name="InvokerProxyFactory"
         proxy-type="attribute">jboss:service=proxyFactory,type=unified,target=Naming</depends>
      -->
      <depends optional-attribute-name="Naming"
         proxy-type="attribute">jboss:service=NamingBeanImpl</depends>
   </mbean> 

   <!-- Writes the bootstrap URL for the NamingService in a known location,
        so tools (e.g. Jopr) can use it as a java.naming.provider.url.
   -->
   <mbean code="org.jboss.naming.NamingProviderURLWriter"
      name="jboss:service=NamingProviderURLWriter"
      xmbean-dd="resource:xmdesc/NamingProviderURLWriter-xmbean.xml">
      
      <attribute name="Server"><inject bean="JBossServer"/></attribute>
      <attribute name="BootstrapAddress"><inject bean="jboss:service=Naming" property="bindAddress"/></attribute>
      <attribute name="BootstrapPort"><inject bean="jboss:service=Naming" property="port"/></attribute>
   </mbean>

</server>
